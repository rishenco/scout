openapi: 3.0.0
info:
  title: Reddit Relevance API
  version: 1.0.0
  description: >
    API for retrieving Reddit posts, detecting relevance based on user-defined profiles,
    capturing manual user classifications, and previewing changes to the detection logic.
servers:
  - url: http://localhost:3000
paths:
  /profiles:
    get:
      summary: List all profiles
      responses:
        '200':
          description: A list of profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
    post:
      summary: Create a new profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileSettings'
      responses:
        '201':
          description: The created profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /profiles/{profileId}:
    parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Retrieve a profile by ID
      responses:
        '200':
          description: Profile found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: Profile not found
    put:
      summary: Replace an entire profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileSettings'
      responses:
        '200':
          description: The updated profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    delete:
      summary: Delete a profile
      responses:
        '204':
          description: Profile deleted
  /feed:
    get:
      summary: List of posts to show in feed
      parameters:
        - name: profile_id
          required: true
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: filters
          in: query
          schema:
            $ref: '#/components/schemas/FeedFilters'
        - name: order
          in: query
          schema:
            description: What will be shown first?
            type: string
            enum: [new, max_score, relevant]
            default: new
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedPost'
  /user_classifications:
    get:
      summary: Retrieve a specific user classification
      parameters:
        - name: profile_id
          in: query
          required: true
          schema:
            type: string
        - name: post_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Classification for this profile and post,
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserClassification'
    post:
      summary: Create, replace or clear a user classification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserClassification'
      responses:
        '200':
          description: The updated classification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserClassification'

  /analyze_posts:
    post:
      summary: Preview detections for a modified profile against given post IDs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzePostsRequest'
      responses:
        '200':
          description: Generated detections and any errors. Note that those detections will not be stored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzePostsResponse'

components:
  schemas:
    Profile:
      allOf:
        - $ref: '#/components/schemas/ProfileSettings'
        - type: object
          properties:
            id:
              type: string
          required:
            - id

    ProfileSettings:
      type: object
      properties:
        name:
          type: string
        subreddits:
          type: array
          items:
            type: string
        relevancy_filter_prompt:
          type: string
        properties_prompts:
          type: object
          additionalProperties:
            type: string
      required:
        - name
        - subreddits
        - relevancy_filter_prompt
        - properties_prompts

    RedditPost:
      type: object
      properties:
        permalink:
          type: string
        score:
          type: integer
        num_comments:
          type: integer
        subreddit:
          type: string
      required:
        - permalink
        - score
        - num_comments
        - subreddit
        - comments

    Post:
      type: object
      properties:
        id:
          type: string
        source_id:
          type: string
        title:
          type: string
        content:
          type: string
        reddit:
          $ref: '#/components/schemas/RedditPost'
      required:
        - id
        - title
        - content
        - reddit

    Detection:
      type: object
      properties:
        id:
          type: string
        source_id:
          type: string
        profile_id:
          type: string
        post_id:
          type: string
        is_relevant:
          type: boolean
        extracted_properties:
          type: object
          additionalProperties:
            type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - profile_id
        - post_id
        - is_relevant
        - extracted_properties
        - created_at

    FeedPost:
      type: object
      properties:
        detection:
          $ref: '#/components/schemas/Detection'
        post:
          $ref: '#/components/schemas/Post'
        user_classification:
          $ref: '#/components/schemas/UserClassification'

    FeedFilters:
      description: Filters you can set for the feed of posts
      type: object
      properties:
        source_id:
          type: string
        is_relevant:
          type: boolean
        has_user_classification:
          type: boolean
        user_classification_value:
          type: boolean
        newer:
          type: string
          format: date-time
        reddit:
          type: object
          properties:
            subreddit:
              type: string
            score_greater:
              type: integer

    UserClassification:
      type: object
      properties:
        profile_id:
          type: string
        post_id:
          type: string
        is_relevant:
          description: 'Null means user did not set it yet'
          type: boolean
          nullable: true
      required:
        - profile_id
        - post_id
        - is_relevant

    AnalyzePostsRequest:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/ProfileSettings'
        post_ids:
          type: array
          items:
            type: string
      required:
        - profile
        - post_ids

    AnalyzePostsResponse:
      type: object
      properties:
        detections:
          type: array
          items:
            $ref: '#/components/schemas/Detection'
        errors:
          type: array
          items:
            type: object
            properties:
              post_id:
                type: string
              error:
                type: string
            required:
              - post_id
              - error
      required:
        - detections
        - errors
